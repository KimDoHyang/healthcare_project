# /etc/nginx/sites-available/ 에 위치해야함
# server {} 라고 선언하면 이것이 하나의 가상 서버가 된다.
# sites-enabled, sites-available에 있는 default설정을 삭제한 후 연결.
# 자동으로 해당 디렉토리에 만들어 둔 app.nginx 파일 및 링크에 있는 이 설정파일에 따라
# Nginx가 작동한다.

server {
    return 404;
}

server {
    # 80번 포트로부터 받은 요청을 처리할 것이다.
    listen 80;
    listen 443;

    # 도메인이 'localhost'에 해당할 때 요청을 처리한다.
    server_name 54.180.67.127 hanoul.kr www.hanoul.kr api.hanoul.kr;

    # 인코딩 방식은 utf-8
    charset utf-8;

    # request/response의 최대 사이즈는 128M
    # 기본값이 매우 작다.
    client_max_body_size 128M;

    # '/'부터 시작하는 == 모든 URL 연결에 대해
    location / {
        # uwsgi와의 연결에 unix 소켓을 사용할 것이라고 했다.
        # 여기서 unix:// 끼지는 프로토콜이다(http:// 처럼)
        # "/tmp/app.sock" 파일을 사용한다.
        uwsgi_pass  unix:///tmp/app.sock;
        # uwsgi 관련 설정을 모두 가져오겠다
        include     uwsgi_params;
    }

    # Django까지 연결하지 않고, Static 및 Media 파일을 직접 연결하는 작업
    # collectstatic으로 모은 .static, .media 파일과 /static/, /media/ URL을 다이렉트로 연결
    location /static/ {
        alias   /srv/projects/healthcare/.static/;
    }

    location /media/ {
        alias   /srv/projects/healthcare/.media/;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hanoul.kr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hanoul.kr/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = hanoul.kr) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name localhost 54.180.67.127 hanoul.kr www.hanoul.kr api.hanoul.kr;
    return 404; # managed by Certbot
}

